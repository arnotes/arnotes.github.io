{"version":3,"sources":["serviceWorker.ts","redux/action-types.ts","redux/reducers.ts","redux/store.ts","redux/redux-action.class.ts","services/firebase.service.ts","services/auth.service.ts","components/Login.tsx","services/database.service.ts","components/NoteList.tsx","components/NoteEditor.tsx","components/Layout.tsx","components/AuthProtector.tsx","components/App.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","ActionTypes","combinedReducers","combineReducers","user","userState","action","type","SET_USER","data","notes","SET_NOTE_LIST","Object","toConsumableArray","sort","a","b","Index","strSearch","str","SET_SEARCH_QUERY","filteredNotes","returnVal","SET_FILTERED_NOTE_LIST","Title","toLowerCase","localeCompare","selectedNote","note","SET_SELECTED_NOTE","store","createStore","ReduxAction","classCallCheck","this","createClass","key","firebaseSvc","firebase","initializeApp","apiKey","authDomain","projectId","authSvc","AuthService","auth","googleAuthProvider","GoogleAuthProvider","signInWithRedirect","signOut","Login","props","possibleConstructorReturn","getPrototypeOf","call","loginType","loginWithGoogle","_this","react_default","createElement","index_es","open","fullScreen","component","button","onClick","e","loginWith","className","title","Component","connected","connect","dispatch","databaseSvc","firestore","collectionPath","qry","coll","collection","snapshot","items","forEach","doc","docData","ID","id","push","item","add","docRef","update","batch","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","itemDocRef","err","return","commit","delete","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","NoteList","p","sbjSearch","Subject","onSearchChange","setState","objectSpread","loading","target","onClickNote","onSelectNote","onClickAddNote","asyncToGenerator","regenerator_default","mark","_callee","dummyTitle","newNote","newNoteList","wrap","_context","prev","Date","getTime","toString","Body","UID","uid","toast","info","position","hideProgressBar","autoClose","setTimeout","titleInput","document","querySelector","focus","select","addToCollection","stop","onClickDeleteNotes","_callee2","notesToDelete","_context2","checkedNotes","includes","filter","n","length","removeMany","onNoteListCheck","checked","dragulaDecorator","componentBackingInstance","Dragula","moves","el","container","handle","classList","contains","on","source","sibling","arrayMinusDroppedItem","siblingList","Array","from","children","dropIndex","previousSibling","nextSibling","insertIndex","findIndex","splice","find","i","onNoteListReorder","_this2","pipe","debounceTime","subscribe","selectedNoteID","searchToLower","slice","toLocaleLowerCase","updateMany","index","_this3","selected","dense","divider","classes","root","onChange","stopPropagation","_this4","getFilterNotes","disabled","placeholder","fontSize","style","color","ref","map","renderListItem","NoteEditor","sbjChange","currentNoteID","onCloseNote","onDeleteNote","_ref","noteToDelete","removeItem","_x","apply","arguments","updateItem","prop","upcomingNoteID","body","delta","_this$state","square","label","onTitleChange","react_quill_lib_default","onBodyChange","readOnly","theme","Layout","toggleDrawer","isOpen","drawerOpen","logout","logOut","width","isMobile","anchor","variant","onClose","paper","components_NoteList","only","email","placement","components_NoteEditor","withWidthConnected","withWidth","AuthProtector","checkAuth","onAuthStateChanged","loadNotes","getCollection","where","CircularProgress_default","size","components_Login","components_Layout","createMuiTheme","palette","primary","main","secondary","App","styles","components_AuthProtector","lib","ReactDOM","render","es","components_App","getElementById"],"mappings":"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","file":"static/js/main.0b0d1e78.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n\nregister();","export enum ActionTypes {\r\n  SET_USER = 'SET_USER',\r\n  SET_ACTIVE_NOTE = 'SET_ACTIVE_NOTE',\r\n  SET_NOTE_LIST = 'SET_NOTE_LIST',\r\n  SET_FILTERED_NOTE_LIST = 'SET_FILTERED_NOTE_LIST',\r\n  SET_SEARCH_QUERY = 'SET_SEARCH_QUERY',\r\n  SET_SELECTED_NOTE = 'SET_SELECTED_NOTE',\r\n  SET_SEARCHINPUT_FOCUS_STATE = 'SET_SEARCHINPUT_FOCUS_STATE'\r\n}","import { ReduxAction, IReduxAction } from \"./redux-action.class\";\r\nimport { ActionTypes } from \"./action-types\";\r\nimport { combineReducers } from \"redux\";\r\nimport { INote } from \"../models/note.interface\";\r\nimport { StoreState } from \"./store-state\";\r\n\r\nfunction user(userState:firebase.User, action:IReduxAction<firebase.User>) {\r\n  switch (action.type) {\r\n    case ActionTypes.SET_USER:\r\n      return action.data as firebase.User;\r\n      break;\r\n  \r\n    default:\r\n      return userState || null;\r\n      break;\r\n  }\r\n}\r\n\r\nfunction notes(notes:INote[], action:IReduxAction<INote[]>){\r\n  switch (action.type) {\r\n    case ActionTypes.SET_NOTE_LIST:\r\n      return [...action.data].sort((a,b)=>(a.Index||0)-(b.Index||0));\r\n      break;\r\n  \r\n    default:\r\n      return notes||[];\r\n      break;\r\n  }\r\n}\r\n\r\nfunction filteredNotes(notes:INote[], action:IReduxAction<INote[]>){\r\n  let returnVal:INote[] = [];\r\n  switch (action.type) {\r\n    case ActionTypes.SET_FILTERED_NOTE_LIST:\r\n      if(action.data){\r\n        returnVal = [...action.data];\r\n      }\r\n      break;\r\n  \r\n    default:\r\n      if(notes){\r\n        returnVal = [...notes];\r\n      }\r\n      break;\r\n  }\r\n\r\n  return returnVal.sort((a,b)=>a.Title.toLowerCase().localeCompare(b.Title.toLowerCase()));\r\n}\r\n\r\nfunction strSearch(str:string, action:IReduxAction<string>){\r\n  switch (action.type) {\r\n    case ActionTypes.SET_SEARCH_QUERY:\r\n      return action.data;\r\n      break;\r\n  \r\n    default:\r\n      return str||\"\";\r\n      break;\r\n  }\r\n}\r\n\r\nfunction selectedNote(note:INote, action:IReduxAction<INote>){\r\n  switch (action.type) {\r\n    case ActionTypes.SET_SELECTED_NOTE:\r\n      return action.data;\r\n      break;\r\n  \r\n    default:\r\n      return note||null;\r\n      break;\r\n  }\r\n}\r\n\r\nexport const combinedReducers = combineReducers({\r\n  user,\r\n  notes:notes,\r\n  strSearch:strSearch,\r\n  filteredNotes:filteredNotes,\r\n  selectedNote:selectedNote\r\n});","import { createStore } from 'redux';\r\nimport { combinedReducers } from './reducers';\r\n\r\nexport const store = createStore(combinedReducers, {});","export interface IReduxAction<T> {\r\n    type: string;\r\n    data: T;\r\n}\r\n\r\nexport class ReduxAction<T> implements IReduxAction<T>{\r\n    constructor(type:string, data:T){\r\n        this.type = type;\r\n        this.data = data;\r\n    }\r\n\r\n    get value ():IReduxAction<T> {\r\n       return {\r\n           type: this.type,\r\n           data: this.data\r\n       }\r\n    }\r\n\r\n    type:string = null;\r\n    data:T = null;\r\n}","import firebase from 'firebase';\r\nconst firebaseSvc = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n        authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n        projectId: process.env.REACT_APP_PROJECTID\r\n});\r\n\r\nexport default firebaseSvc;","import firebaseSvc from \"./firebase.service\";\r\nimport firebase from \"firebase\";\r\n\r\nclass AuthService{\r\n    constructor(){\r\n        this.auth = firebaseSvc.auth();\r\n        this.googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n    }\r\n\r\n    private auth:firebase.auth.Auth;\r\n\r\n    loginWithGoogle(){\r\n        return this.auth.signInWithRedirect(this.googleAuthProvider);\r\n    }\r\n\r\n    logOut(){\r\n        return this.auth.signOut();\r\n    }\r\n\r\n    googleAuthProvider:firebase.auth.GoogleAuthProvider = null;\r\n}\r\n\r\nconst authSvc = new AuthService();\r\nexport default authSvc;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { StoreState } from '../redux/store-state';\r\nimport { Dispatch } from 'redux';\r\nimport { Card, CardHeader, CardContent, Typography, Button, Dialog, DialogTitle, DialogContent, DialogContentText, List, ListItem, ListItemText, ListItemIcon, Icon, Tooltip } from '@material-ui/core';\r\nimport { IReduxAction } from '../redux/redux-action.class';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog';\r\nimport authSvc from '../services/auth.service';\r\n\r\ninterface LoginProps extends StoreState{\r\n    dispatch?:<T>(action:IReduxAction<T>)=>void,\r\n    fullScreen?:boolean\r\n}\r\n\r\nclass Login extends Component<LoginProps> {\r\n  \r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  loginWith(loginType:\"google\"|\"facebook\"){\r\n    switch (loginType) {\r\n      case \"google\":\r\n        authSvc.loginWithGoogle();\r\n        break;\r\n    \r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog open={true} fullScreen={false} >\r\n        <DialogTitle >\r\n          Login\r\n            </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            <List component=\"nav\">\r\n              <ListItem button onClick={e => this.loginWith(\"google\")}>\r\n                <ListItemIcon><i className=\"fab fa-google\"></i></ListItemIcon>\r\n                <ListItemText>Sign in with Google</ListItemText>\r\n              </ListItem>\r\n              <Tooltip title=\"Not supported\">\r\n                <ListItem button >\r\n                  <ListItemIcon><i className=\"fab fa-facebook\"></i></ListItemIcon>\r\n                  <ListItemText><del>Login with Facebook</del></ListItemText>\r\n                </ListItem>\r\n              </Tooltip>\r\n            </List>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState):LoginProps => ({\r\n  user:state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch<any>):LoginProps => {\r\n  return {\r\n    dispatch:dispatch\r\n  }\r\n}\r\n\r\nconst connected = connect(mapStateToProps, mapDispatchToProps)(Login);\r\nexport default connected;\r\n","import firebaseSvc from \"./firebase.service\";\r\n\r\nclass FireStoreDatabase {\r\n\r\n  async getCollection<T>(collectionPath: string, qry: (collection: firebase.firestore.Query) => firebase.firestore.Query = null) {\r\n\r\n    let coll = this.firestore.collection(collectionPath) as firebase.firestore.Query;\r\n    if (qry) {\r\n      coll = qry(coll);\r\n    }\r\n\r\n    const snapshot = await coll.get();\r\n    let items: T[] = [];\r\n    snapshot.forEach(doc => {\r\n      let docData: any = doc.data();\r\n      docData.ID = doc.id;\r\n      items.push(docData);\r\n    });\r\n    (items as any[]).sort((a, b) => a.ID.localeCompare(b.ID));\r\n    return items;\r\n  }\r\n\r\n  async addToCollection<T>(collectionPath: string, item: T) {\r\n    const docRef = await this.firestore\r\n      .collection(collectionPath)\r\n      .add(item);\r\n    item['ID'] = docRef.id;\r\n    return item;\r\n  }\r\n\r\n  updateItem<T>(collectionPath: string, item: T) {\r\n    return this.firestore\r\n      .collection(collectionPath)\r\n      .doc(item['ID'])\r\n      .update(item);\r\n  }\r\n\r\n  updateMany<T>(collectionPath: string, items: T[]){\r\n    const batch = this.firestore.batch();\r\n    for (const item of items) {\r\n      const itemDocRef = this.firestore.collection(collectionPath).doc(item[\"ID\"]);\r\n      batch.update(itemDocRef, item);\r\n    }\r\n    return batch.commit();\r\n  }\r\n\r\n  removeItem<T>(collectionPath: string, item: T) {\r\n    return this.firestore\r\n      .collection(collectionPath)\r\n      .doc(item['ID'])\r\n      .delete();\r\n  }\r\n\r\n  removeMany<T>(collectionPath:string, items:T[]){\r\n    const batch = this.firestore.batch();\r\n    for (const item of items) {\r\n      const itemDocRef = this.firestore.collection(collectionPath).doc(item[\"ID\"]);\r\n      batch.delete(itemDocRef);\r\n    }\r\n\r\n    return batch.commit();\r\n  }\r\n\r\n  firestore = firebaseSvc.firestore();\r\n}\r\n\r\nexport const databaseSvc = new FireStoreDatabase();","import React, { Component, Dispatch } from 'react'\r\nimport PropTypes, { element } from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { StoreState } from '../redux/store-state';\r\nimport { IReduxAction, ReduxAction } from '../redux/redux-action.class';\r\nimport { databaseSvc } from '../services/database.service';\r\nimport { INote } from '../models/note.interface';\r\nimport { Paper, InputBase, Icon, LinearProgress, List, ListItem, ListItemText, ButtonBase, Button, Divider, ListItemIcon, Checkbox } from '@material-ui/core';\r\nimport color from '@material-ui/core/colors/lime';\r\nimport { ActionTypes } from '../redux/action-types';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport * as ReactDOM from 'react-dom';\r\nimport Dragula from 'react-dragula';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\ninterface Props extends StoreState{\r\n  notes?:INote[];\r\n  dispatch?:Dispatch<IReduxAction<any>>;\r\n  onSelectNote?:(note:INote)=>any\r\n  onAddNote?:(note:INote)=>any\r\n}\r\n\r\ninterface State{\r\n  loading?:boolean;\r\n  strSearch?:string;\r\n  checkedNotes?:INote[];\r\n}\r\n\r\nclass NoteList extends Component<Props,State> {\r\n  constructor(p){\r\n    super(p);\r\n    this.state = {\r\n      checkedNotes:[],\r\n      strSearch:null\r\n    };\r\n  }\r\n\r\n  sbjSearch = new Subject();\r\n\r\n  componentDidMount(){\r\n    this.sbjSearch\r\n      .pipe(debounceTime(500))\r\n      .subscribe(()=>{\r\n        this.setState({...this.state,loading:false});\r\n        this.props.dispatch(new ReduxAction(ActionTypes.SET_SEARCH_QUERY, this.state.strSearch).value);\r\n      });\r\n  }\r\n\r\n  getFilterNotes(){\r\n    const selectedNoteID = this.props && this.props.selectedNote && this.props.selectedNote.ID || \"\";\r\n    const searchToLower = (this.props.strSearch||\"\").toLowerCase();\r\n    const filtered = (this.props.notes||[])\r\n                          .slice(0)\r\n                          .filter(n => n.Body.toLowerCase().includes(searchToLower) ||\r\n                                    n.Title.toLocaleLowerCase().includes(searchToLower) ||\r\n                                    n.ID == selectedNoteID);\r\n    return filtered;\r\n  }\r\n\r\n  onSearchChange = (e:React.ChangeEvent<HTMLInputElement>)=>{\r\n    this.setState({...this.state,loading:true,strSearch:e.target.value});\r\n    this.sbjSearch.next({});\r\n  }\r\n\r\n  onClickNote = (note:INote)=>{\r\n    this.props.onSelectNote && this.props.onSelectNote(note);\r\n  }\r\n\r\n  onClickAddNote = async ()=>{\r\n    const dummyTitle = 'NEW_NOTE_'+(new Date().getTime().toString());\r\n    let newNote:INote = {\r\n      Body:'',\r\n      Title:dummyTitle,\r\n      UID:this.props.user.uid\r\n    }\r\n    \r\n    const newNoteList = [...this.props.notes, newNote];\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_NOTE_LIST,newNoteList).value);\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_SELECTED_NOTE, newNote).value);\r\n\r\n    toast.info(\"New note added!\", { position:\"bottom-right\", hideProgressBar:true, autoClose:2500 });\r\n\r\n    setTimeout(() => {\r\n      const titleInput = document.querySelector('#txt-note-title') as HTMLInputElement;\r\n      titleInput.focus();\r\n      titleInput.select();\r\n    }, 100);\r\n\r\n    await databaseSvc.addToCollection('notes',newNote);\r\n  }\r\n\r\n  onClickDeleteNotes = async ()=>{\r\n    const notesToDelete = [...this.state.checkedNotes];\r\n\r\n    if(this.state.checkedNotes.includes(this.props.selectedNote)){\r\n      this.props.dispatch(new ReduxAction(ActionTypes.SET_SELECTED_NOTE, null).value);\r\n    }\r\n    this.setState({...this.state, checkedNotes:[]});\r\n\r\n    const newNoteList = this.props.notes.filter(n => !notesToDelete.includes(n));\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_NOTE_LIST, newNoteList).value);\r\n\r\n    toast.info(`${notesToDelete.length} note/s deleted!`, { position:\"bottom-right\", hideProgressBar:true, autoClose:2500 });\r\n\r\n    await databaseSvc.removeMany('notes', notesToDelete);\r\n  }\r\n\r\n  onNoteListCheck = (note:INote, checked:boolean)=>{\r\n    if(checked){\r\n      this.setState({...this.state, checkedNotes:[...this.state.checkedNotes,note]});\r\n    }else{\r\n      this.setState({...this.state, checkedNotes:this.state.checkedNotes.filter(n => n.ID!=note.ID)});\r\n    }\r\n  }\r\n\r\n  onNoteListReorder(notes:INote[]){\r\n    databaseSvc.updateMany(\"notes\", notes);\r\n  }\r\n\r\n  dragulaDecorator = (componentBackingInstance) => {\r\n    if (componentBackingInstance) {\r\n      const options = {\r\n        moves: function (el, container, handle) {\r\n        return handle.classList.contains('note-drag-handle');\r\n        }\r\n      };\r\n      const drake = Dragula([componentBackingInstance], options);\r\n      \r\n      drake.on('drop', (el:HTMLElement,target:HTMLElement,source,sibling)=>{\r\n        const arrayMinusDroppedItem = this.props.notes.filter(n => n.ID!=el.id);\r\n        const siblingList = Array.from(target.children);\r\n        const dropIndex = siblingList.indexOf(el);\r\n        \r\n        const previousSibling = siblingList[dropIndex-1];\r\n        const nextSibling = siblingList[dropIndex+1];\r\n\r\n        let insertIndex = null;\r\n        if(previousSibling){\r\n          insertIndex = arrayMinusDroppedItem.findIndex(n => n.ID == previousSibling.id)+1;\r\n        }else if(nextSibling){\r\n          insertIndex = arrayMinusDroppedItem.findIndex(n => n.ID == nextSibling.id);\r\n        }\r\n\r\n        if(insertIndex!=null){\r\n          arrayMinusDroppedItem.splice(insertIndex, 0, this.props.notes.find(n => n.ID==el.id));\r\n          let i = 0;\r\n          arrayMinusDroppedItem.forEach(n => {\r\n            n.Index = i;\r\n            i++;\r\n          });\r\n          this.onNoteListReorder(arrayMinusDroppedItem);\r\n        }\r\n      })\r\n    }\r\n  };\r\n\r\n  renderListItem(note:INote, index:number){\r\n    const selected = this.props.selectedNote == note;\r\n    const { checkedNotes } = this.state;\r\n    return(\r\n      <ListItem button dense divider key={note.ID} id={note.ID}\r\n        classes={({root:\"note-list-item \"+(selected? 'list-btn-primary':'')})}\r\n        onClick={e=>this.onClickNote(note)} >\r\n          <Checkbox checked={checkedNotes.includes(note)} \r\n            onChange={(e,checked)=>this.onNoteListCheck(note,checked)}\r\n            onClick={e=>e.stopPropagation()} \r\n            classes={({root:'list-chk'})}/>\r\n        <ListItemText classes={({root:'note-item-text '+(selected&&'note-item-text-selected')})} >{note.Title}</ListItemText>\r\n        <div className=\"note-drag-handle\">\r\n          <i className=\"fas fa-arrows-alt-v\"></i>\r\n        </div>\r\n      </ListItem>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    const filteredNotes = this.getFilterNotes();\r\n    let strSearch = this.state.strSearch;\r\n\r\n    if(strSearch==null){\r\n      strSearch = this.props.strSearch || \"\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"note-list-component\">\r\n        <Paper classes={({root:\"actions-bar-wrapper\"})}>\r\n          <List>\r\n            <ListItem onClick={this.onClickAddNote} classes={({root:'list-btn-primary_'})} button dense>\r\n              <ListItemText classes={({root:'note-item-text'})} >CREATE NEW NOTE</ListItemText>\r\n              <ListItemIcon>\r\n                <i className=\"fas fa-plus-circle\"></i>\r\n              </ListItemIcon>              \r\n            </ListItem>\r\n            <ListItem onClick={this.onClickDeleteNotes} disabled={this.state.checkedNotes.length<1} classes={({root:'list-btn-danger_'})} button dense>\r\n              <ListItemText classes={({root:'note-item-text'})} >DELETE NOTES</ListItemText>\r\n              <ListItemIcon>\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n              </ListItemIcon>              \r\n            </ListItem>            \r\n          </List>\r\n          &nbsp;\r\n        </Paper>\r\n        <Paper classes={({root:\"searchbar-paper\"})} >\r\n          <div className=\"search-input-wrapper\">\r\n            <InputBase onChange={this.onSearchChange}\r\n              value={strSearch} \r\n              classes={({root:\"search-input\"})} placeholder=\"Search..\"></InputBase>\r\n            <Icon fontSize=\"small\" classes={({root:'search-icon'})}>\r\n              <i style={({color:\"#a0a0a0\"})} className=\"fas fa-search\"></i>\r\n            </Icon>\r\n          </div>\r\n        </Paper>\r\n        <LinearProgress classes={({root:loading?\"search-progress-loading\":\"search-progress-complete\"})} \r\n          color=\"primary\">\r\n        </LinearProgress>\r\n        <div className=\"list-of-notes\">\r\n          <List>\r\n            <div ref={this.dragulaDecorator}>\r\n              {filteredNotes.map((n,index) => this.renderListItem(n,index))}\r\n            </div>\r\n          </List>\r\n        </div>     \r\n        \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState):StoreState => ({\r\n  ...state\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  dispatch:dispatch\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList)\r\n","import React, { Component, Dispatch } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport ReactQuill from 'react-quill';\r\nimport { StoreState } from '../redux/store-state';\r\nimport { Paper, TextField, Typography, Button, IconButton, Hidden, CircularProgress, Icon } from '@material-ui/core';\r\nimport { Subject } from 'rxjs';\r\nimport { IReduxAction, ReduxAction } from '../redux/redux-action.class';\r\nimport { ActionTypes } from '../redux/action-types';\r\nimport { INote } from '../models/note.interface';\r\nimport { async } from 'q';\r\nimport { databaseSvc } from '../services/database.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { Delta, Sources } from 'quill';\r\n\r\ninterface Props extends StoreState{\r\n  dispatch?:<T>(action:IReduxAction<T>)=>any;\r\n}\r\n\r\ninterface State{\r\n  loading?:boolean;\r\n  title?:string;\r\n  body?:string;\r\n}\r\n\r\nclass NoteEditor extends Component<Props, State> {\r\n\r\n  constructor(p){\r\n    super(p);\r\n    this.state = {};\r\n  }\r\n\r\n  sbjChange = new Subject<{title:string,body:string}>();\r\n\r\n  currentNoteID:string = null;\r\n\r\n  componentWillMount(){\r\n    this.sbjChange.pipe(debounceTime(500))\r\n      .subscribe(async ()=>{\r\n        this.props.dispatch(new ReduxAction(ActionTypes.SET_SELECTED_NOTE, this.props.selectedNote).value);\r\n        await databaseSvc.updateItem('notes', this.props.selectedNote);\r\n        this.setState({...this.state,loading:false});\r\n      });\r\n  }\r\n\r\n  componentWillReceiveProps(a,b){\r\n    const prop = a as Props;\r\n    const upcomingNoteID = prop.selectedNote && prop.selectedNote.ID || null;\r\n    if(this.currentNoteID != upcomingNoteID){\r\n      this.setState({...this.state,title:null,body:null});\r\n    }\r\n    this.currentNoteID = prop.selectedNote && prop.selectedNote.ID || null;\r\n  }\r\n\r\n  onCloseNote = ()=>{\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_SELECTED_NOTE, null).value);\r\n  }\r\n\r\n  onDeleteNote = async (noteToDelete:INote)=>{\r\n    await databaseSvc.removeItem('notes',noteToDelete);\r\n    const newNoteList = this.props.notes.filter(n => n.ID!=noteToDelete.ID);\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_NOTE_LIST, newNoteList).value);\r\n    this.onCloseNote();\r\n  }\r\n\r\n  onTitleChange(title:string){\r\n    const note = this.props.selectedNote;\r\n    note.Title = title;\r\n    this.sbjChange.next({title:this.state.title, body:this.state.body});\r\n    this.setState({...this.state,loading:true,title:title});\r\n  }\r\n\r\n  onBodyChange(body:string,delta:Delta,source:Sources){\r\n    if(source!=\"user\"){\r\n      return;\r\n    }\r\n\r\n    const note = this.props.selectedNote;\r\n    note.Body = body;\r\n    this.sbjChange.next({title:this.state.title, body:this.state.body});\r\n    this.setState({...this.state,loading:true,body:body});\r\n  }\r\n\r\n  render() {\r\n    const { selectedNote } = this.props;\r\n    let { title,body } = this.state;\r\n    if(title==null){\r\n      title = selectedNote && selectedNote.Title || \"\";\r\n    }    \r\n\r\n    if(body==null){\r\n      body = selectedNote && selectedNote.Body || \"\";\r\n    }    \r\n\r\n    return (\r\n      <div className={\"note-editor-component\"}>\r\n        <div className={\"empty-editor-wrapper \"+(selectedNote && \"hidden\")}>\r\n          <div className={\"empty-editor-paper\"}>\r\n            <div>\r\n              <Icon>\r\n                <i className=\"backdrop-icon fas fa-book\"></i>\r\n              </Icon>\r\n            </div>\r\n          </div>        \r\n        </div> \r\n        <Paper classes={({root:(!selectedNote && \"hidden\")})} square>\r\n          <div className=\"title-wraper\">\r\n            <TextField id=\"txt-note-title\" \r\n              label=\"Title\" \r\n              onChange={e=>this.onTitleChange(e.target.value)} \r\n              classes={({root:'txt-title'})} \r\n              disabled={!selectedNote} \r\n              value={title}></TextField>\r\n            <IconButton disabled={!selectedNote} onClick={this.onCloseNote} color=\"default\">\r\n              <i style={({fontSize:'20px'})} className=\"fas fa-times-circle\"></i>\r\n            </IconButton>\r\n            <CircularProgress color=\"secondary\" className={\"editor-save-progress \"+(!this.state.loading && \"hidden\")} />\r\n          </div>\r\n        </Paper>\r\n        <Paper classes={({root:\"quill-paper-wrapper \"+(!selectedNote && \"hidden\")})} square >\r\n          <ReactQuill onChange={(e,delta,source)=>this.onBodyChange(e,delta,source)} \r\n            readOnly={!selectedNote} \r\n            value={body} \r\n            placeholder=\"write your notes :)\" theme=\"snow\" />\r\n        </Paper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: any) => ({\r\n  ...state\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({dispatch})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteEditor)\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Toolbar, IconButton, Typography, Button, AppBar, Hidden, withWidth, Drawer, Grid, Tooltip } from '@material-ui/core';\r\nimport { Dispatch } from 'redux';\r\nimport { StoreState } from '../redux/store-state';\r\nimport { IReduxAction, ReduxAction } from '../redux/redux-action.class';\r\nimport { Breakpoint } from '@material-ui/core/styles/createBreakpoints';\r\nimport authSvc from '../services/auth.service';\r\nimport { ActionTypes } from '../redux/action-types';\r\nimport NoteList from './NoteList';\r\nimport { INote } from '../models/note.interface';\r\nimport NoteEditor from './NoteEditor';\r\n\r\ninterface LayoutProps extends StoreState{\r\n  dispatch?:<T>(action:IReduxAction<T>)=>any,\r\n  width?:Breakpoint\r\n}\r\n\r\ninterface LayoutState {\r\n  drawerOpen?:boolean\r\n}\r\n\r\nclass Layout extends Component<LayoutProps, LayoutState> {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      drawerOpen:false\r\n    }\r\n  }\r\n\r\n  toggleDrawer = (isOpen:boolean = null)=>{\r\n    if(isOpen==null){\r\n      isOpen = !this.state.drawerOpen;\r\n    }\r\n\r\n    this.setState({...this.state,drawerOpen:isOpen});\r\n  }\r\n\r\n  isMobile(){\r\n    return this.props.width==\"xs\" || this.props.width==\"sm\";\r\n  }\r\n\r\n  logout = async()=>{\r\n    await authSvc.logOut();\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_USER, null).value);\r\n  }\r\n\r\n  onSelectNote = (note:INote)=>{\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_SELECTED_NOTE, note).value);\r\n    this.toggleDrawer(false);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`layout-component ${(this.state.drawerOpen || !this.isMobile()) && \"drawer-open\"}`}>\r\n        <nav>\r\n          <Drawer anchor=\"left\" variant={this.isMobile()? \"temporary\":\"permanent\"} onClose={()=>this.toggleDrawer(false)} open={this.state.drawerOpen} classes={({paper:\"drawer-paper\"})} >\r\n            <NoteList onSelectNote={this.onSelectNote} ></NoteList>\r\n          </Drawer>\r\n        </nav>      \r\n        <AppBar color=\"primary\" position=\"relative\">\r\n          <Toolbar>\r\n            <Hidden only={[\"md\",\"lg\",\"xl\"]} >\r\n              <IconButton onClick={()=>this.toggleDrawer()} >\r\n                <i className=\"fas fa-bars\"></i>\r\n              </IconButton>   \r\n            </Hidden>\r\n            <Typography variant=\"h6\" color=\"inherit\">\r\n              {this.props.user.email}  \r\n            </Typography>\r\n            <Tooltip title=\"Sign Out\" placement=\"left\" >\r\n              <IconButton onClick={this.logout} classes={({root:\"btn-logout\"})} >\r\n                <i style={({fontSize:\"20px\"})} className=\"fas fa-power-off\"></i>\r\n              </IconButton>\r\n            </Tooltip>            \r\n          </Toolbar>\r\n        </AppBar>\r\n        <div className=\"layout-content\">\r\n          <NoteEditor></NoteEditor>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state:StoreState):StoreState => ({\r\n    user:state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch) => {\r\n  return {\r\n    dispatch:dispatch\r\n  } as LayoutProps;\r\n}\r\n\r\nconst connected = connect(mapStateToProps, mapDispatchToProps)(Layout);\r\nconst withWidthConnected = withWidth()(connected);\r\nexport default withWidthConnected;\r\n","import React, { Component, Dispatch } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { StoreState } from '../redux/store-state';\r\nimport { ReduxAction, IReduxAction } from '../redux/redux-action.class';\r\nimport firebase from 'firebase';\r\nimport { ActionTypes } from '../redux/action-types';\r\nimport firebaseSvc from '../services/firebase.service';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Login from './Login';\r\nimport Layout from './Layout';\r\nimport { databaseSvc } from '../services/database.service';\r\nimport { INote } from '../models/note.interface';\r\n\r\ninterface AuthProtectorProps extends StoreState {\r\n  dispatch?:(action:IReduxAction<any>)=>any\r\n}\r\n\r\ninterface AuthProtectorState {\r\n  loading?: boolean;\r\n}\r\n\r\nclass AuthProtector extends Component<AuthProtectorProps, AuthProtectorState> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true\r\n    };\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.checkAuth();\r\n  }\r\n\r\n  async checkAuth(){\r\n    this.setState({...this.state,loading:true});\r\n    firebaseSvc.auth().onAuthStateChanged(user => {\r\n      this.props.dispatch(new ReduxAction(ActionTypes.SET_USER, user).value);\r\n      this.setState({...this.state,loading:false});\r\n      if(user){\r\n        this.loadNotes();\r\n      }      \r\n    });\r\n  }\r\n\r\n  async loadNotes(){\r\n    const notes = await databaseSvc.getCollection<INote>(\"notes\", (qry)=>qry.where(\"UID\",\"==\",this.props.user.uid));\r\n    this.props.dispatch(new ReduxAction(ActionTypes.SET_NOTE_LIST, notes).value);\r\n  }  \r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"giant-progress-container-wrapper\">\r\n          <div className=\"giant-progress-container\">\r\n            <CircularProgress\r\n              variant=\"indeterminate\"\r\n              size={200}\r\n              value={50}\r\n              color=\"primary\"\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    } else if (this.props.user == null) {\r\n      return (\r\n        <div className=\"flex-hbox login-wrapper\">\r\n          <Login></Login>\r\n\t\t\t\t</div>\r\n      );\r\n    } else {\r\n      return (\r\n        <Layout></Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: StoreState): AuthProtectorProps => ({\r\n  user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch:Dispatch<any>):AuthProtectorProps => {\r\n  return {\r\n    dispatch:dispatch\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AuthProtector)\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport '../stylesheets/App.scss';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-quill/dist/quill.core.css';\nimport 'react-dragula/dist/dragula.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '@material-ui/core'\nimport firebase from 'firebase';\nimport { Button, CssBaseline } from '@material-ui/core';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport AuthProtector from './AuthProtector';\nimport { ToastContainer } from 'react-toastify';\n\nconst theme = createMuiTheme({\n  palette:{\n    type: 'dark',\n    primary:{\n      main:'#673ab7'\n    },\n    secondary: {\n      main: '#00e5ff',\n    }\n  }\n});\n\ninterface AppProps{\n\n}\n\nclass App extends Component<AppProps> {\n  constructor(props){\n    super(props);\n\n  }\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n          <CssBaseline/>\n          <AuthProtector></AuthProtector>\n          <ToastContainer />\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}